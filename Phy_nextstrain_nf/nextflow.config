//
// Notes to End Users.
//
// The workflow should run without editing this configuration file,
// however there may be instances in which you wish to edit this
// file for compute performance or other reasons. Please see:
//
//   https://nextflow.io/docs/latest/config.html#configuration
//
// for further help editing this file.

params {
    sequences = "$baseDir/data/nextstrain.fa"
    metadata = "$baseDir/data/nextstrain.tsv"
    outdir = "$baseDir/results"
    reference = "$baseDir/defaults/reference_seq.fa"
    referencegb = "$baseDir/defaults/reference_seq.gff"
    columns = "country"
    color_schemes = "$baseDir/defaults/color_schemes.tsv"
    lat_longs = "$baseDir/defaults/lat_longs.tsv"
    ordering = "$baseDir/defaults/color_ordering.tsv"
    auspice_config = "$baseDir/defaults/auspice_config.json"
    root = "best"
    units = "mutations-per-site"
}

manifest {
    name            = 'xx'
    author          = 'xx'
    homePage        = 'xx'
    description     = 'xx'
    mainScript      = 'main.nf'
    nextflowVersion = '>=20.10.0'
}

executor {
    $local {
        cpus = 16
        memory = "60 GB"
    }
}

process {
            withLabel:sewage { container = "jinglu0331/iphnano:ncov_sewage" }
            shell = ['/bin/bash', '-euo', 'pipefail']
        }
process.cleanup = true
profiles {

    // the "standard" profile is used implicitely by nextflow
    // if no other profile is given on the CLI
    standard {
        docker {
            enabled = true
            // this ensures container is run as host user and group, but
            //    also adds host user to the within-container group
            runOptions = "--user \$(id -u):\$(id -g) --group-add 100"
            }
        }
         // using singularity instead of docker
    singularity {
        singularity {
            enabled = true
            autoMounts = true
        }
    }



    // profile using conda environments rather than docker
    // containers
    conda {
        docker.enabled = false
        process {
            shell = ['/bin/bash', '-euo', 'pipefail']
        }
        conda {
             cacheDir = ""
             useMamba = true
        }
    }


    // local profile for simplified development testing
    local {
        process.executor = 'local'
    }
}


timeline {
  enabled = true
  file = "${params.outdir}/execution/timeline.html"
}
report {
  enabled = true
  file = "${params.outdir}/execution/report.html"
}
trace {
  enabled = true
  file = "${params.outdir}/execution/trace.txt"
}
dag {
  enabled = true
  file = "${params.outdir}/execution/pipeline.svg"
}
